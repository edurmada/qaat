name: CI

on:
  pull_request:
    branches: [ "develop", "main" ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.55.1-jammy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Set environment
        env:
          ENV: ${{ vars.ENV || 'dev' }}
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
        run: |
          echo "ENV=${ENV}" >> $GITHUB_ENV
          if [ -n "${BASIC_AUTH_USERNAME}" ]; then echo "BASIC_AUTH_USERNAME=${BASIC_AUTH_USERNAME}" >> $GITHUB_ENV; fi
          if [ -n "${BASIC_AUTH_PASSWORD}" ]; then echo "BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD}" >> $GITHUB_ENV; fi

      - name: Run tests
        run: npm test

      - name: Prepare Cucumber report for upload
        if: always()
        run: |
          # Create cucumber-report directory for GitHub Pages
          rm -f cucumber-report  # Remove file if it exists
          mkdir -p cucumber-report
          
          if [ -f "cucumber-report.html" ]; then
            echo "Moving cucumber-report.html to directory"
            mv cucumber-report.html cucumber-report/index.html
          elif [ -d "cucumber-report" ] && [ -f "cucumber-report/index.html" ]; then
            echo "Cucumber report directory with index.html already exists"
          else
            echo "Creating empty Cucumber report"
            echo "<html><body><h1>No test results available</h1><p>Tests may have failed or no report was generated.</p></body></html>" > cucumber-report/index.html
          fi

      - name: Upload Cucumber report to Pages
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: cucumber-report

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: test-results
          if-no-files-found: warn

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4