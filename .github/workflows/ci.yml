name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: write
  id-token: write

jobs:
  tests:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.55.0-jammy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      # Browsers and system deps are preinstalled in the container image

      - name: Set up environment
        env:
          ENV: ${{ vars.ENV || 'staging' }}
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
        run: |
          echo "ENV=${ENV}" >> $GITHUB_ENV
          if [ -n "${BASIC_AUTH_USERNAME}" ]; then echo "BASIC_AUTH_USERNAME=${BASIC_AUTH_USERNAME}" >> $GITHUB_ENV; fi
          if [ -n "${BASIC_AUTH_PASSWORD}" ]; then echo "BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD}" >> $GITHUB_ENV; fi

      - name: Run tests
        run: npx playwright test

      - name: Prepare HTML report for GitHub Pages
        if: always()
        run: |
          # Ensure index exists to avoid empty publish
          test -f playwright-report/index.html

      - name: Create versioned site directory
        if: always()
        run: |
          mkdir -p site/${{ github.sha }}
          cp -R playwright-report/* site/${{ github.sha }}/
          # Append link to index (keeps previous content if present)
          if [ -f site/index.html ]; then
            echo "<li><a href='${{ github.sha }}/index.html'>Run ${{ github.sha }}</a></li>" >> site/index.html
          else
            echo "<html><body><h1>Reports</h1><ul><li><a href='${{ github.sha }}/index.html'>Run ${{ github.sha }}</a></li></ul></body></html>" > site/index.html
          fi

      - name: Upload site artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: site
          if-no-files-found: error

      - name: Upload test-results (screenshots/videos)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
          if-no-files-found: warn

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: site
          path: site
      - name: Publish to gh-pages (keep history)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site
          keep_files: true
          publish_branch: gh-pages


